{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Manjushri\\\\Desktop\\\\New\\\\react-progressive-loading-bar\\\\src\\\\components\\\\LoadingBar.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport styles from '../styles/LoadingBar.module.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst LoadingBar = () => {\n  _s();\n  const [progress, setProgress] = useState(0);\n  const [message, setMessage] = useState('Fetching details');\n  useEffect(() => {\n    var _stages$currentStage;\n    const stages = [{\n      message: 'Fetching details',\n      duration: 2000\n    }, {\n      message: 'Details fetched',\n      duration: 2000\n    }, {\n      message: 'Pics/Videos downloading',\n      duration: 3000\n    }, {\n      message: 'Your device is backed up',\n      duration: 1000\n    }];\n    let currentStage = 0;\n    const interval = setInterval(() => {\n      if (currentStage < stages.length) {\n        setMessage(stages[currentStage].message);\n        setProgress((currentStage + 1) * (100 / stages.length));\n        currentStage++;\n      } else {\n        clearInterval(interval);\n      }\n    }, ((_stages$currentStage = stages[currentStage]) === null || _stages$currentStage === void 0 ? void 0 : _stages$currentStage.duration) || 0);\n    return () => clearInterval(interval);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.loadingBarContainer,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.loadingBar,\n      style: {\n        width: `${progress}%`\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.loadingMessage,\n      children: message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 9\n  }, this);\n};\n_s(LoadingBar, \"+s4B8lN+8cyccLdOyg+q+d7lHVY=\");\n_c = LoadingBar;\nexport default LoadingBar;\nvar _c;\n$RefreshReg$(_c, \"LoadingBar\");","map":{"version":3,"names":["React","useEffect","useState","styles","jsxDEV","_jsxDEV","LoadingBar","_s","progress","setProgress","message","setMessage","_stages$currentStage","stages","duration","currentStage","interval","setInterval","length","clearInterval","className","loadingBarContainer","children","loadingBar","style","width","fileName","_jsxFileName","lineNumber","columnNumber","loadingMessage","_c","$RefreshReg$"],"sources":["C:/Users/Manjushri/Desktop/New/react-progressive-loading-bar/src/components/LoadingBar.tsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport styles from '../styles/LoadingBar.module.css';\n\nconst LoadingBar: React.FC = () => {\n    const [progress, setProgress] = useState(0);\n    const [message, setMessage] = useState('Fetching details');\n\n    useEffect(() => {\n        const stages = [\n            { message: 'Fetching details', duration: 2000 },\n            { message: 'Details fetched', duration: 2000 },\n            { message: 'Pics/Videos downloading', duration: 3000 },\n            { message: 'Your device is backed up', duration: 1000 }\n        ];\n\n        let currentStage = 0;\n\n        const interval = setInterval(() => {\n            if (currentStage < stages.length) {\n                setMessage(stages[currentStage].message);\n                setProgress((currentStage + 1) * (100 / stages.length));\n                currentStage++;\n            } else {\n                clearInterval(interval);\n            }\n        }, stages[currentStage]?.duration || 0);\n\n        return () => clearInterval(interval);\n    }, []);\n\n    return (\n        <div className={styles.loadingBarContainer}>\n            <div className={styles.loadingBar} style={{ width: `${progress}%` }} />\n            <div className={styles.loadingMessage}>{message}</div>\n        </div>\n    );\n};\n\nexport default LoadingBar;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAOC,MAAM,MAAM,iCAAiC;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAErD,MAAMC,UAAoB,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC/B,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGP,QAAQ,CAAC,CAAC,CAAC;EAC3C,MAAM,CAACQ,OAAO,EAAEC,UAAU,CAAC,GAAGT,QAAQ,CAAC,kBAAkB,CAAC;EAE1DD,SAAS,CAAC,MAAM;IAAA,IAAAW,oBAAA;IACZ,MAAMC,MAAM,GAAG,CACX;MAAEH,OAAO,EAAE,kBAAkB;MAAEI,QAAQ,EAAE;IAAK,CAAC,EAC/C;MAAEJ,OAAO,EAAE,iBAAiB;MAAEI,QAAQ,EAAE;IAAK,CAAC,EAC9C;MAAEJ,OAAO,EAAE,yBAAyB;MAAEI,QAAQ,EAAE;IAAK,CAAC,EACtD;MAAEJ,OAAO,EAAE,0BAA0B;MAAEI,QAAQ,EAAE;IAAK,CAAC,CAC1D;IAED,IAAIC,YAAY,GAAG,CAAC;IAEpB,MAAMC,QAAQ,GAAGC,WAAW,CAAC,MAAM;MAC/B,IAAIF,YAAY,GAAGF,MAAM,CAACK,MAAM,EAAE;QAC9BP,UAAU,CAACE,MAAM,CAACE,YAAY,CAAC,CAACL,OAAO,CAAC;QACxCD,WAAW,CAAC,CAACM,YAAY,GAAG,CAAC,KAAK,GAAG,GAAGF,MAAM,CAACK,MAAM,CAAC,CAAC;QACvDH,YAAY,EAAE;MAClB,CAAC,MAAM;QACHI,aAAa,CAACH,QAAQ,CAAC;MAC3B;IACJ,CAAC,EAAE,EAAAJ,oBAAA,GAAAC,MAAM,CAACE,YAAY,CAAC,cAAAH,oBAAA,uBAApBA,oBAAA,CAAsBE,QAAQ,KAAI,CAAC,CAAC;IAEvC,OAAO,MAAMK,aAAa,CAACH,QAAQ,CAAC;EACxC,CAAC,EAAE,EAAE,CAAC;EAEN,oBACIX,OAAA;IAAKe,SAAS,EAAEjB,MAAM,CAACkB,mBAAoB;IAAAC,QAAA,gBACvCjB,OAAA;MAAKe,SAAS,EAAEjB,MAAM,CAACoB,UAAW;MAACC,KAAK,EAAE;QAAEC,KAAK,EAAE,GAAGjB,QAAQ;MAAI;IAAE;MAAAkB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACvExB,OAAA;MAAKe,SAAS,EAAEjB,MAAM,CAAC2B,cAAe;MAAAR,QAAA,EAAEZ;IAAO;MAAAgB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACrD,CAAC;AAEd,CAAC;AAACtB,EAAA,CAjCID,UAAoB;AAAAyB,EAAA,GAApBzB,UAAoB;AAmC1B,eAAeA,UAAU;AAAC,IAAAyB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}